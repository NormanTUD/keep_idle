#!/bin/bash

# Standard-Schlafzeit auf 60 Sekunden setzen, falls kein Parameter übergeben wird
SLEEPTIME=${1:-60}

echo "Schlafzeit auf $SLEEPTIME Sekunden gesetzt."

# Überprüfen, ob das Skript bereits läuft
echo "Überprüfe, ob das Skript bereits läuft..."
ALREADY_RUNNING_PID=$(ps auxf | grep keep_idle | grep bash | sed -e "s#^$USER\s*##" | sed -e 's#\s.*##' | grep -v "$$")

if [[ $(echo "$ALREADY_RUNNING_PID" | wc -l) -gt 1 ]]; then
    echo "Skript läuft bereits, Prozess mit PID $ALREADY_RUNNING_PID wird beendet."
    kill -9 $ALREADY_RUNNING_PID
    exit 0
fi

echo "Skript läuft nicht bereits, fahre fort."

# Bewegung nach links und rechts in Pixeln
MOVEMENTS=(-1 1)
COUNTER=0

echo "Start der Mausbewegungsschleife mit Schlafzeit $SLEEPTIME Sekunden."

while :
do
    # Zeit, die der Computer untätig war, in Sekunden
    IDLETIME=$(xprintidle)
    IDLETIME=$(($IDLETIME / 1000))

    echo "IDLE-Zeit: $IDLETIME Sekunden."

    if [[ $IDLETIME -gt $SLEEPTIME ]]; then
        # Aktuelle Mausposition ermitteln
        MOUSE_X=$(xinput --query-state $(xinput --list | grep -i mouse | cut -d= -f2 | cut -f1 | head -1) | grep "valuator.0" | sed -e 's#.*=##')
        MOUSE_Y=$(xinput --query-state $(xinput --list | grep -i mouse | cut -d= -f2 | cut -f1 | head -1) | grep "valuator.1" | sed -e 's#.*=##')

        echo "Aktuelle Mausposition: X=$MOUSE_X, Y=$MOUSE_Y."

        # Neue Position berechnen: abwechselnd nach links oder rechts bewegen
        NEW_X=$(($MOUSE_X + ${MOVEMENTS[$COUNTER % 2]}))
        echo "Bewege Maus zu X=$NEW_X (Schritt: ${MOVEMENTS[$COUNTER % 2]} Pixel)."

        # Mausbewegung durchführen
        xdotool mousemove $NEW_X $MOUSE_Y

        # Zähler erhöhen für nächste Bewegung
        COUNTER=$(($COUNTER + 1))
        echo "Mausbewegung durchgeführt. COUNTER=$COUNTER."
    else
        echo "IDLE-Zeit zu gering. Keine Bewegung nötig."
    fi

    # Warten vor der nächsten Bewegung
    echo "Schlafe für $SLEEPTIME Sekunden."
    sleep $SLEEPTIME
done

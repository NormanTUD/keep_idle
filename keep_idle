#!/bin/bash

ps auxf | grep keep_idle | grep bash | sed -e "s#^$USER\s*##" | sed -e 's#\s.*##' | grep -v "$$"
ALREADY_RUNNING_PID=$(ps auxf | grep keep_idle | grep bash | sed -e "s#^$USER\s*##" | sed -e 's#\s.*##' | grep -v "$$")

if [[ $(echo "$ALREADY_RUNNING_PID" | wc -l) -gt 1 ]]; then
	kill -9 $ALREADY_RUNNING_PID
	exit 0
fi

MOVEMENTS=(-1 1)
COUNTER=0
SLEEPTIME=100

while :
do
    IDLETIME=$(xprintidle)
    IDLETIME=$(($IDLETIME / 1000))

    if [[ $IDLETIME -gt $SLEEPTIME ]]; then
        MOUSE_X=$(xinput --query-state $(xinput --list | grep -i mouse | cut -d= -f2 | cut -f1 | head -1) | grep "valuator.0" | sed -e 's#.*=##')
        MOUSE_Y=$(xinput --query-state $(xinput --list | grep -i mouse | cut -d= -f2 | cut -f1 | head -1) | grep "valuator.1" | sed -e 's#.*=##')

        NEW_X=$(($MOUSE_X + ${MOVEMENTS[$COUNTER % 2]}))
        NEW_Y=$(($MOUSE_Y + ${MOVEMENTS[$COUNTER % 2]}))

        if [[ $((COUNTER % 2)) -eq 0 ]]; then
            xdotool mousemove $NEW_X $MOUSE_Y
        else
            xdotool mousemove $MOUSE_X $NEW_Y
        fi

        COUNTER=$(($COUNTER + 1))
    fi

    sleep $SLEEPTIME
done
